ext.nativeBuild = {buildDir, projectDir, name, os -> 

    println("native build start");
    File shareDir = file("$projectDir/src/main/native/share");
    if (!shareDir.exists()) {
        println("No native lib dir found for $name");
        return;
    }
    def sharedSources = shareDir.listFiles();
    def osSources = [];
    def arch = "x86-64"

    File osDir = file("$projectDir/src/main/native/$os");
    def HASOSS = osDir.exists();
    if (HASOSS) {
        osSources = osDir.listFiles();
    }

    def JAVAHOME = "/opt/jdk-11.0.2.jdk/Contents/Home" // TODO replace with property
    def includeFlags = "-I$JAVAHOME/include" 
    def osincludeFlags = "" 
    if (os == "ios") {
        osincludeFlags = "-I$JAVAHOME/include/darwin"
    }

    def compileOutput = "$buildDir/native/$os-$arch"
    new File(compileOutput).mkdirs()

    def compiler = "gcc";

    def cargs = [
        "-c", includeFlags, osincludeFlags, sharedSources, osSources
    ].flatten()

    exec {
        executable "/usr/bin/gcc"
        args cargs
        workingDir compileOutput
    }
}
